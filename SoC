February 25:
After the prep meeting with my coach Lori King, I started out learning Django with the Djangogirls tutorial. For this, I installed PaizaCloud and created a virtual environment. The tutorial is interesting, though aimed at a younger audience with a lot of "you're awesome" etc. Anyway, my goal was to work through the tutorial this week and also look at an HTML tutorial that codebar.io has on its website.

February 27:
The initial plan proved to be a bit too optimistic. The tutorial turned out to be somewhat outdated: a newer version of Django caused problems. I decided to switch to a tutorial called Django-Marcador. This tutorial is aimed at creating an app to manage bookmarks. It is interesting and I achieved some things (getting the basic app running on the development server, being able to use it and make changes online etc.). However, further down into the code (building the frontend, configuring URLs, views and templates) it turned out that also this tutorial used an older version of Django and there were too many conflicts in the code.

LESSONS LEARNED: Don't start any tutorials without being absolutely clear a) what the current version of the software used in the tutorial is, and b) whether it is using the right/latest version of Python 3.

February 28:
The obvious choice: tutorials from Django. The tutorial guides you through the creation of a basic poll application:
- a public site that lets people view polls and vote in them.
- an admin site that lets the administrator add, change and delete polls.

There is also an advanced tutorial (perhaps later?).
So what can I say about this tutorial (docs.djangoproject.com)? It works so far.

BUT: In almost all documentation and tutorials I have come across, the importance of a virtual environment was highlighted.
That is very good because a venv is indeed important. But why is the information always incomplete? You get info on how to create and activate a virtual environment, but nobody explains that if you work with a venv you have to INSTALL DJANGO IN THE VENV even if you have installed Django before. You should also CONTINUE in the venv with django-admin startproject mysite.
Otherwise, you will not be able to run $python manage.py runserver and get to see the "Congratulations" page on hhttp://127.0.0.1:8000/ .... that would be a pity, no?

So there we are, lost at least four hours to find this out. They say you learn by doing. Yeah. Especially by doing the same thing over and over the wrong way because of incomplete information.

March 1:
Still following the tutorial and no major problems so far. It has a clear logic and I more or less understand what is done, although I will not be able to reproduce it by myself. I have created models, learned to update the settings to include the app under INSTALLED APPS so that the app is integrated into the overall project. I understand the app is 'plugable' and can be used in other projects by just adding it as installed app. I have also learned about the commands makemigration and migrate as way of saving and applying changes to models. In the project SQL is used and it is recommended to use SQLite so I have seen how SQL creates table names, primary keys, IDs, Foreign Key and all sorts of field types. The command sqlmigrate prints to screen everything SQL provides for your database and you can check it. With the command python manage.py check, you can check if there are issues in your project.

So that is a lot of information. The API was introduced and some commands in the shell were demonstrated and explained. There is a lot more to it but I now have an impression of the ways you can search the database using primary keys or id's etc. etc. Very interesting but also too much to take in so it was good the tutorial only dived into a few examples. After this, working with URLs was explained and after creating views (specific web pages) it was possible to access these online. All of this worked fine. The error messages I received I could quickly find in my code and correct. The server will not run if the views contain errors, and the command line returns error messages that immediately show what is wrong. The views were terribly basic (just a line of text in a horrible font) but it is great that things work as they should.

March 2:
So what can I say? Yesterday must have been my lucky day. Today, the command to get the venv activated did not work. I spent another three hours on Stackoverflow and other websites to find out the problem. Although officially Python 3.7 uses the command: source venv/bin/activate to activate the venv, and although I have used that the entire day yesterday, today someone must have decided it would be fun to disable this command. I got nothing but error messages. Finally, just trying something with my eyes closed, I got the venv running using . bin/activate without knowing why (btw: I know now that it means current working directory .... I have not used the command line a lot so far). Without the venv active, you cannot run the server and not continue with the tutorial. Fine, it worked for now. I learned some more about views, templates and about how to avoid hardcoded URLs by using a template for paths.

I am trying to get the bigger picture but it is so much information that it is not easy to get my head around it. Maybe I will make some sort of overview of the steps without all the detail, for an at-a-glance idea of what I am doing. The project is still interesting and I very much want to continue and also do more of these tutorials. Somehow I feel a bit stressed because I lose so much time with these stupid things like not getting the venv activated. We'll see how that works (or not) tomorrow.

March 3:
I continued with the tutorial. The venv is still activated - I will not deactivate it until I find out what this problem with the command is.
The app runs on the server but not all pages. The admin pages run OK, that is good. I have gone through the .html files a number of times to correct the code. Compared to Python, HTML looks ugly and is hardly readable (but I have not yet done any tutorial on HTML so that is a handicap). It is a very complicated language and as it turned out, I forgot a number of / in the code. I also found that the file with the URL paths has the paths as a list but still adds a comma at the end of the list. Strange.
Anyway, after making corrections I ran the server and with http://127.0.0.1:8000/polls/ I do get the page with the poll question (just one formulated so far) and when I click on it, I get the two options to choose from. When I choose and click on vote, however, a page with Error 500 appears. I have gone through all my pages (models, views, urls) and all HTML templates but cannot find incorrect code. I still wonder about this comma at the end of the list of URLs but since both the mysite/mysite/urls.py and the mysite/polls/urls.py use brackets as well as a comma after the last item, I suppose it must be correct.
I need someone to check the code for me. There is a vague remark on Stackoverflow about the url maybe being used already or a 'wild card' - no idea what is meant by that.

Something else I learned: by default, Django puts DEBUG=True in the settings.py file. It seems you should only set this to True in case you want to test the app. For deploying your web app, you need to change the setting to DEBUG=False. That returns an error when you run the server because if DEBUG=False you also need to change ALLOWED_HOSTS = [] to ALLOWED_HOSTS = ['*'] or specify the path between '' and add 'localhost' (I did not try this). It is very strange that DEBUG=True is the default when at the same time Django docs warns that it should 'never' be set to True unless for testing (it is a security issue, I believe). Why not set the default to False? I am probably naive to think that would be the solution ...

LESSONS LEARNED: even if the documentation tells you to use a specific command it may still not work - the mysteries of coding.

March 4:
In my Skype with Lori I discussed the fact that it would be helpful to have someone go through the code with me. I am pretty certain there is a hickup somewhere but after going through the various code files a few times, I think I have become blind to mistakes. Also, it would be a help to get an explanation by someone else. A tutorial only goes so far. The Django tutorial does not have a Q&A section, which is not helpful.

Today I have gone through the section on testing. Using the code given in the tutorial, it is not difficult to test and I discovered one typo in my code. I also got a quick introduction to the Django test client, which simulates a user interacting with the code at the view level. The examples were done in the shell, importing the setup_test_environment from django.test.utils and subsequently importing Client from django.test and creating an instance of the Client to use (client = Client()). With several commands such as response = client.get('/'), response.status_code, response.content etc. it was possible to see what the user experiences using the poll app. It is an interesting tool but I would need to know more about it.

Right now, I only have a very vague idea why the code for the tests is written the way that it is and I would not be able to write these tests myself. I have the feeling that I am getting lost in a sea of functions and variables and am losing the overview a bit. In any case, my goal is to do at least two more tutorials after this one to see if I can cement some of this into memory for longer than just a few weeks.

March 5:
On March 3 I found that there was an issue with DEBUG and ALLOWED_HOSTS. Today I again run into an issue with DEBUG. To run .css files, DEBUG must be set to True. This may cause issues again as I described in my post of March 3, but I do need to see if the layout is changing as a result of my css code. Yes, it does.
The only thing is that the background does not change even though a background.gif file has been created and included in the css stylesheet. After hunting down this issue on Stackoverflow, I found a question regarding using a jpg as background. With the code suggested for this issue, I changed my polls stylesheet to include a picture (our lovely terrace in Maastricht with flowers growing on the walls etc.). And it works: this is now the background when I run the server. Amazing. I see the picture in the background.gif and am wondering now whether this background.gif is a template that loads pictures?? According to the tutorial, having this gif would result in "the background loaded in the top left of the screen". Nope. Does not work. But my jpg is now the background of the page ...

The tutorial is finished and I will do some reading on Django: it will probably make a bit of sense now that I have done one tutorial. I plan to have another look at the DjangoGirls tutorial to see if I can make more sense of it now.

March 10:
This week I will look into the DjangoGirls tutorial to see if I can follow it after finishing the original Django tutorial. I expect to be able to deal with the incompatibilities based on what I know now.

March 12:
Today I worked through another unit of my Udemy course on generators and iterators. I want to keep up with the course in addition to all the other things I am doing (have done 52% so far of the total course - they show the percentage all the time, to keep you motivated I guess). The current unit is the so-called Final Capstone Project, which turns out to be a list of some 100 (!) ideas for projects. You are expected to choose one project that you think you can do within a day, and a second project that you expect will take you more than a week and involves a lot of Stackoverflowing etc. The projects are centered around numbers, algorithms, graphs, data structures, text, etc. I would like to do a project from every topic but it takes time away from what I want/need to do to prepare for a SoC. So far, I have done a simple project: cost calculation for covering a floor with tiles (function with parameters: width, height, price). It took me half an hour or so ... but I cannot check my solution anywhere. The code runs, so that's it for now.

March 13:
Change of plans: on Saturday 16 I will attend a workshop on html and css. Since my coach Lori and I agreed that I should work on these two topics, I decided to start with the html tutorial on the codebar.io website. Timewise, it makes more sense. The Capstone Project will have to wait.
The first HTML tutorial went very well. The tutorial is clear and I built the famous owl website without any problems. I can find enough info online to give me more background on HTML. I like it. Compared to writing Python, it seems pretty straightforward as long as you stick to the syntax. At the same time, that is the complicating factor because the syntax is not very accessible: it is like learning German - the rules are the rules and that is what you stick to under all circumstances.
I also went through the first CSS tutorial and will finish that tomorrow I hope. It is very satisfying to see changes you make in the code reflected directly in the website. I am sure there is a snag somewhere and that it cannot be this 'easy'. We'll see.

March 14:
Today, I finished the CSS tutorial and continued with the HTML/CSS Beyond the basics tutorial (3rd codebar tutorial).

March 16:
Workshop on HTML and CSS by Le Wagon and One Ragtime. It was an interesting workshop although the explanation of HTML and CSS was very much high-speed. It is understandable that you generate more interest for a workshop if you promise people they will produce their own profile page online in just one workshop. On the other hand, it was clear some could not keep up. I was glad I already did the first introduction tutorials in HTML and CSS: a lot of it I had already looked at and that was really good because it was way to apply what I had just learned one or two days before.
Publishing the profile page with GitHub Pages was not a good choice. In the info about the workshop it was recommended to have Chrome and SublimeText installed. There was no mention of GitHub so most women needed to get that downloaded and get an account at the same moment the teacher wanted to publish the profile page. GitHub is not something you can explain in five minutes and it is not good for people's self-confidence to be made insecure by rushing through something they do not know and cannot understand in a few minutes.
In the panel discussion I was introduced to Laura Fernandez Gimenez, CEO and Founder of AllWomen.Tech. Impressive CV and a very likeable and interesting person. I looked at their website and have asked for info on the workshop for data analysis with Python. More and more I get the feeling that data analysis, machine learning and AI are fields that women should be active in.

March 17:
I have processed some of the info of yesterday (websites for fonts, HTML colour codes, etc.) and continued with the third tutorial.

March 19:
Yesterday and today I worked on the third tutorial and created the final version of the Ada Lovelace webpage. I am unsure about how to use padding and margin but that will come. The next tutorial is all about layout and formatting. I have checked the AL webpage example of codebar and my own and was able to spot the differences that they announced in the 'bonus' part. I think I understand how to use the inspector tool to check the html and css code and find differences and mistakes. It is a lot of information though, and it will take some practice to get a real overview of all the elements and properties involved. Still, it's very interesting.
I think it is fantastic that the codebar tutorials for HTML and CSS use information about women such as Ada Lovelace and Grace Hopper to build webpages. It is a great way to learn more about these admirable women. I want to know about them.

March 20:
Today I finished the fourth tutorial, making the Grace Hopper webpage. I like working with HTML/CSS: you see immediate results
when you change things. Lori and I did a Skype and she asked me to think about working with Django in the future in a professional setting and whether or not I would like that. I think building websites is gratifying because you see a (relatively) quick result so I would be interested. Still, I need to know more about Django because I have hardly scratched the surface right now.
I went through a quick 19-steps tutorial on CSS layout (learnlayout.com) which was useful because it gave more explanation on the things I have worked on today. Also, they covered a few new features of CSS (building columns, for example) that look interesting.
I will continue with the fifth HTML-CSS tutorial tomorrow: Diving into HTML5 and CSS3.

March 21:
Lori has organised a Django coach for me to work on Django during the Codebar workshop. This is great. I asked for someone to explain a few things and it is fantastic that Lori has found someone.
So I decided to go back to the Django Tutorial to make an overview of my questions and issues. I spent three hours (!!!) getting nowhere because I could not even get the virtual environment activated. What frustrates me most is that the information online goes into all sorts of directions and does not help at all. Even the Python documentation is not clear. It would be an idea to add a simplified version to these documentation: for idiots, if you want to get this then do that and nothing else. Right now, the documentation goes on very quickly into everything that is deprecated (frankly, I don't care), all sorts of different commands for Windows with no indication what should be used for OS X (or is that assumed to be the standard? who knows), and then a small table with the commands to activate the venv for either Posix (whatever that is) or Windows. Since Posix is not Windows, I assume this should work for OS X. But it does not work for me. Even though I have done this entire tutorial three weeks ago and got the webpages working, I now cannot even get the venv activated. And looking for info online gets me nowhere: information on Stackoverflow differs from the Python docs say, the Virtualenv site says something else, the Django tutorial is unclear.
Fortunately, during the Codebar workshop I was supported by Emily! Emily is intelligent, to-the-point, good at explaining, quick to grasp my code (and its mistakes) and was an enormous help. The venv was explained. She provided better insight into how the various elements of Django work together, what MVC (aka MTV)means and the 'tree' of files that Django creates when you start a project. In other words, I feel like I can conquer the world of Django now :-D. Well, until the next problem pops up, that is. But Emily told me I can get in touch whenever I need help, so that is great.

March 23:
During our skype session yesterday, Lori and I talked a bit more about possible ways to organise a SoC and whom I could partner with. She also mentioned that Codebar BCN could do with a few more organisers. Not sure if they are looking at me for this but of course I would be willing to be part of it - I have so much to thank this group of people for!
I have messed around a bit with the profile page I created a week ago during the HTML-CSS workshop at Le Wagon. It feels as if I understand it a bit. I was able to change some headers and text, to get a background picture into the page and add a link to my LinkedIn account.
The plan is to continue with the HTLM-CSS tutorials from Codebar (two more to go) and after that I am not sure. I have a few other tutorials I can look at but perhaps it would be good to go back to Django first. RealPython has a beginners tutorial on starting a project with Django. I think their tutorials are very good: clear and complete, not overloaded with information that you cannot grasp (yet). I even took out a year's subscription to their channel, loads of info and videos etc. I have used a lot of their material for free in the last year, including an entire book that you can download for free, and newsletters etc. It is time to pay for what they make available. It is great that internet offers so much for free but it is also an investment by people who make this available and at a certain moment money should become an item of consideration, I feel.
So loads to do. I also added a tutorial on how to write comments in your code. This I do not do in a structural manner although I know how important it is - sometimes, I cannot read my own code and do not understand what it is supposed to do. So that is on the list in Trello as well for the coming period.

March 25:
Tutorial 6 is a challenge to make a webpage by yourself. There was a short explanation of header/nav/section/article/aside but it is not entirely clear to me how I should use these. Perhaps it would be better to dive into that later, when I have a better grasp of building a webpage. The tutorial shows an example of a webpage about women programmers and I have started to write the code to produce this page. First, I have written the html code, defining all the elements and adding urls, a sound file and a video file. The latter two both work!! This was quite something. I have also been able to add a floating element, after a lot of researching. The header with the nav bar and its links were not too difficult to get in the webpage, but the various pictures and other elements should be positioned in a specific way and this is a challenge.

March 26:
In our skype today, Lori and I decided that my goal should be to go beyond coding as a 'hobby' and become a developer. So far, my feeling was that it would be too ambitious to aim for this. On the other hand, it has become more than obvious that I like coding, I am very motivated and eager to learn more, and I have been spending more time than ever on coding. I even stopped working as a freelance editor and corrector to focus only on learning to code. This is no longer a hobby.
I have continued working on Tutorial 6. It is mainly the styling now. I need more explanation on the sectioning parts that build the structure and how these fit in with the other elements that HTML uses (<head> versus <header>, <main> versus <body> etc.). Somehow I feel it would have been better not to introduce this just yet in the tutorial. There should at least have been more explanation, this is not helpful. Anyway, I continued the styling, mainly by trying out things that did not work the way I intended. Learning by doing, as they say. Perhaps I need a book to be able to check things and not having to go through ten internet search results before I find the information I need.

March 28:
Building and styling a webpage yourself is a good way to learn. It was surprising how much time I needed to get three pictures horizontally aligned. I am still unclear on what the problem was. It is the disadvantage of tweaking your code: what was changed, HTML or CSS code? and how? You just don't know it anymore. It has become a bit more complex now. Still, the page almost looks the way it should. I will finish the page and hopefully I can discuss it with someone during the next codebar evening. The fact that the result looks like it should, does not mean I used the right code to get it. I found it a lot harder to get clear information regarding CSS than, for example, on Python. Maybe that has to do with the fact that you can do things in many different ways. There is one codebar tutorial left and I will work on that as soon as I have finished the webpage from tutorial 6.

March 29:
Tutorial 6 is finished and the webpage looks like the example in the tutorial so I am happy. I did not try to incorporate the resizing for different screen formats. The tutorials go very quickly over many things and to me this is a separate topic I need to dive into. I also did not look into the accessibility issue. This is an important aspect of websites and it is a topic I want to look at separately when I understand basic webpage creation better.
I have updated the profile page I made during the Le Wagon workshop by adding the codebar logo and a link to their website. The logo I had to find online which was not easy and I do not understand the code I found (and used) for the html file, but it works. Looks cool, too. I also finally succeeded getting the GitHub and LinkedIn logos on line.

April 1:
After a bit more than one month of coding 'full-time', I certainly can see the difference this has made in my learning curve. Looking at the Trello board under 'Done', I see the DjangoProject tutorial that I completed (33 different items) which involved a lot of research as well as two false starts (with the Django Girls tutorial and the Django Marcador tutorial). According to Emily, the DjangoProject tutorial is actually not easy and perhaps not ideal for a beginner. It was good to hear this from someone who is a pro, because I really found it hard.
After this DjangoProject tutorial, I took on HTML and CSS and started with the codebar tutorials. I have completed 6 out of 7 and have learned an incredible amount of new things. I have created a number of webpages, some of them entirely by myself, and that is a great result. I did a workshop on HTML and CSS organised by Le Wagon and learned a lot, also producing a webpage that I have improved afterwards and published via Google Pages. Some nice reactions as well. In addition, I started the Epicodus tutorials on HTML and CSS and have already finished four in the past month. For the purpose of practicing, I started a blog: Coding @60 (a bit of a grumpy person writing about how young people get all the attention, whine whine whine). I have experimented with relative paths to use html 'sub-documents' with links in the main text and so far this works. I have learned a lot about styling, using links, images etc. The quick result of changes in the code is nice and makes experimenting easier.
The conclusion after the first month is that I have enjoyed myself gathering new knowledge and competencies and applying all of this immediately. I really see that I am going somewhere. If the SoC takes place, I will start calling myself 'developer'. Fingers crossed.

April 6:
The Epicodus tutorials have all been finished and today I also finished the last (7th) codebar tutorial on HTML-CSS. I found it lacking in explanation but the part about media queries was clear and very useful.
Today Lori and I talked about what I would like to work on in the 'summer of code'. Originally, we looked at Django because Lori was interested in doing a Django project. It involves Python so that is good for both of us and I was very interested so we took it from there. Right now, I have started to wonder if this is what I want to continue with. Although creating websites and everything that is involved is really great to do and I found it not too overwhelmingly difficult, I feel it is something that might lead to more commercial opportunities. I am wondering: if I myself am convinced that women can make a difference in tech, then where would I want to contribute? From what I read about artificial intelligence and especially the ethical implications I feel it is something I would want to look into. I am not necessarily looking for a career in tech meaning a high salary and all that. It is the technology itself that I am curious about, not the career opportunities.
Anyway, we'll see. For now, I will put Django etc. on hold and start reading more about machine learning and AI.

April 9:
"start reading more about machine learning and AI" I wrote in my last update. Well, this has been pretty disappointing. I have worked my way through a course designed by the University of Helsinki. The course aims to introduce AI and machine learning to a wider public. In addition to the theory (very generally explained, of course, since it is only an introduction) there are exercises. I failed miserably as soon as maths were involved. Calculations of probability etc. is not something I understand. Of course, I could invest in a maths course but it is something that has never come naturally to me. I do not 'see' the logic. So that was a short but useful experience. My interest lies with the ethical side of AI but if I do not understand the technical part, it remains a philosophical interest. I will not be able to be involved in any programming or data analytics, at least that is my conclusion.

April 14:
This week I have worked on my Udemy Python course. A lot of topics are dealt with but it stays a bit on the surface: some things I really would not be able to do by myself. Take classes: I still am in the dark and feel like I do not understand this, even though I have used the syntax here and there. But the bigger view is missing: why would I want to use classes? To what purpose? And how? Yesterday Lori helped me start a new project to work with classes: building a product inventory and keeping track of changes. It is overwhelming. The idea is that the classes can interact. I believe everything you tell me but I do not understand how this works. Too many 'self.' and other '.' etc. The fact that a class has instances as well as methods, and what the syntax should be of these, it is all still rather unclear. So I started a repo on GitHub called Wrestling-Classes. I want to work on classes until I understand what they are about.

April 17:
I looked at classes this week, using various tutorials and other info. It starts to dawn on me. The question 'why is this useful' has been answered after following the description of how to start a game using class LivingThings for the hero, the monsters, etc. and give them all health, gold, inventory with weapons etc. This makes sense. I was getting fed up with the 'Dog' class that I have come across at least four times now. There has to be a practical angle as far as I am concerned: why would I want to use classes? how can methods help? After working on this, I at least understand how classes and methods can save an enormous amount of coding work. It also means that you can change things more easily and the code is more flexible as a result. The interaction between classes is something I have to work on because I do not see that yet. I will continue working on classes for a bit.

April 18:
After working on using classes and methods for this game, I have worked on applying classes and methods in a bookshop. This is similar to what Lori and I looked at about a week ago. The thing is that I now understand classes and initialisation, and writing methods etc. But where do I go from here? I can have books ordered, sold, inventory counted, etc. but how do I use this in a programme.
One more week and I will have been working on code more or less fulltime for two months. I think I have spent between 25 and 35 hours per week coding, plus some hours thinking and discussing, attending sessions on CSS etc. It really made an enormous difference, quitting the text work and having all this time to work on Python, HTML and CSS.

April 22:
Today I finished the Udemy Python 3 Bootcamp course and received a certificate. This feels good. The certificate states a course of 24 hours but that refers only to the video tutorials: much more time has gone into this, with tests and projects and exercises. I started October 30 2018, but of course worked on it only a few hours every week in the beginning. Only since this March have I been able to spend more time on learning to code.
The new project I have chosen is GitHub. The GitHub Learning Lab offers many tutorials that I want to do. I finished the Introduction to GitHub tutorial today. There is a bug in the tutorial on how to use Markdown and I asked for help from the GitHub support staff. Hopefully, they'll get back to me soon.
The Udemy course only scratched the surface and I am very aware of that. Still, it was useful to go through the basics and a few more advanced things. There is a list of 100 (!!) ideas for Python projects to choose the final Capstone Project from. I have used two ideas so far but hope to use more: it beats coming up with something myself (although some of these ideas are completely outside of the scope of this course, almost ridiculously so).

April 26:
This week I continued working on OOP. I got some help from David during the Codebar evening, learning a lot from him as always. The interaction between classes is still not clear to me but I feel more or less at easy creating classes and methods so we're getting somewhere.
Amalia and I met yesterday to talk about our plans for a Summer of Code. The timing would have to change to Sept-Nov, probably. She has holidays planned in August. We talked about next steps, the involvement of Codebar, sponsors, etc. A Trello board was set up by Amalia so that we can keep track of things to do, doing and done. We are very much on the same page to take this forward and we are certain that there will be a lot of support forthcoming from various sides.
There are a number of workshops that I will be attending in the coming weeks: one on CSS, the opening of the E-mma association here in Barcelona, a talk on AI, introduction to Bootstrap, and of course the Codebar evenings and Inspiring Lightning talks at Thoughtworks. I am learning loads and loads of things, and that is very satisfying and stimulating.

April 27:
This week I have worked on OOP and I also went through a number of GitHub Learning Lab courses:
* Introduction to GitHub
* Communicating using Markdown
* Uploading to GitHub
* Managing Merge Conflicts
* Reviewing Pull Requests
* GitHub Pages
I am stuck in the course on HTML because the bot does not respond so I expect I will have to start anew, but maybe I'll skip it because it is just basics that I have done several times already.
Working with a bot in these courses is a good idea, especially the two or three in which you simulate working in a team using GitHub. It is difficult to get a feel of how GitHub works if you are not working on a project with other people.

In the coming week I will be doing a CSS workshop at the Barcelona Code School and I will attend the official opening of E-mma Association at the Epitech Campus.

April 30:
Two months into more intensive coding now and I am glad I stopped my proofreading etc. to have more time for coding. At the same time it turns out I let many things distract me now that there are no deadlines to meet and so on. I really need to plan what I want to achieve in a specific week. At the same time, that is not easy because I can list many things but usually cannot predict how much time is involved. So it is a learning path, being all by myself setting out my studies.
In the meantime, Amalia and I are looking at the RGSoC projects for 2019. I made a huge G-sheet with all the info and now we have to consider the pro's and con's and narrow it down.
I am not sure exactly where we are going with this: do we have to take on a RGSoC project, or can we do another open source project? Let's see what happens.

May 2:
This week I have done the CSS workshop at BCS. The workshop at Le Wagon was better, I must say. The person giving the workshop at BCS talked softly, not all too clear, and the light in the room made the pictures on the screen look vague and difficult to read. Anyway, for me it was mostly repeating things, which is always good. I also learned a few new things and there were a number of things I needed to check afterwards to compare these with what I had been working on. So it was useful.
I continued practicing with GitHub but the various tutorials now start to feel like repetition. I think I will move on to something else. Perhaps I can work on a repo together with Amalia and that will help me more than any other tutorial I can take.

May 3:
I have started going through the RGSoC projects to see what would be interesting and relevant for Amalia and myself to be involved in. One project I came across mentioned Rails and since I plan to do a workshop on Ruby on May 18, I looked at the website for the project. It is fun: building games with Ruby 2D. Looks simple and attractive. After this, I installed Ruby and some stuff that was recommended. The .rb files did not run so I checked and tested some things, to see what was wrong. After downloading a package from GitHub that was recommended on Stackoverflow, the command line suddenly changed to Henriette MacBook-Air%. It was not possible to change to a directory. Nothing was possible: everything I tried returned 'no permission' error messages. I ended up reinstalling my Mac. This was sooo frustrating. At the same time, it was exactly what you are always afraid of: installing something that ends up messing up your system. I'll leave Ruby until the workshop on the 18th.

May 4:
Wiped my MacAir completely and reinstalled High Sierra. It was a good opportunity to review what files I wanted to put back from the backup I made. I decided to clone all repos from GitHub instead of using the files in the backup. Who knows what happened yesterday and I need to have things working properly again.
Yesterday Amalia informed me that she will not aim for the SoC after all. There are important things happening for her and she will not be able to make a 3-month investment, which I fully understand. She wants to support me so that is very encouraging. She also is convinced that TW will host the SoC. I have heard that from other people as well. It would be a golden opportunity.
After going through the overview of the RGSoC projects, I felt overwhelmed and a bit uncertain about what I could/should do. With Amalia no longer participating, I would need to find a new partner. Also, her experience was very valuable because I have no idea what to expect or what level is required. I have gone through the projects and have given my assessment for each project with regard to suitability for this SoC project. David has agreed to make time available to go through this with me. I have the feeling that he probably knows best what level I have and which project would be feasible for me to do. That will help enormously.

May 5:
It seems the clean start of my Mac has worked and the bug in the command line has gone. It is not the first time I wiped a Mac but you never know if it helps to solve the problem, because you do use files from the backup you made. The bug could still be alive somewhere in there ...

May 10:
This week I worked on writing comments in my code, following the DRY method. After a tutorial on writing comments, I see clearly what I should improve. It already starts with the names I give to values and functions. I can do a lot better there and it will help to write code that can be understood - by myself when I look at it at a later date, as well as by others.
My wrestling with classes continues and during the Codebar evening yesterday David helped me a lot. The concept of creating a class and the reasons behind it, that is more or less clear. The interaction between classes is not clear to me. According to David, the example I was working on is not the best way to understand classes. He gave me homework, basically to start from scratch and extend to a more complex project. I think that is a good way forward. He also again explained the importance of testing, and how this does not need to encompass all the details that are not yet clear. You can start with whatever you write, according to him. I really have to start using TDD, but my fear is that I usually am not really clear on what code I need to use, and the idea of writing a test for this on top of that seems a bit daunting. But so much of the journey into code has been daunting that I suppose I should just move forward. The enthusiasm and warm, safe environment provided by Codebar is really the driver moving me forward: I have come to believe I can do more than just hobby away with writing some code, and become a professional (although I have only told a few people this).

May 13:
A few days ago I had a long talk with David about the Summer of Code. The projects on the list so far are very much in the area of computer science, and two others that I think are interesting require knowledge of graphics etc. The 'beginners' level is interpreted in rather different ways, I feel.
Anyway, we talked about my goal with the SoC and the fact that ThoughtWorks will host the SoC because they want to hire women, preferably not from graduate age. Both women who did the SoC at TW last year have been recruited or are in the recruitment process with TW. That is not my goal. I do not want to go back to full-time work, putting in 50 or 60 hours per week. I have done all of that for many years, made a lot of money, and do not want to revisit that. So I feel the SoC at TW is not for me. Also, it would be unethical to enter into an internship-type of commitment while knowing you do not want a job at the company.  It is a bit of a disappointment in a way that the plan of a SoC at TW will not work out ike that, but we'll see what happens.
This week I will work on TDD and then I plan to start a project in Django: build a website called SustainableBCN, to bring together all the info on shops that sell organic food or products from direct proximity, sustainable clothing, etc. After moving to Barcelona, it took me quite some time to find the right shops and I would like to share the information. Who knows, maybe I can turn the website into an app in the future. Keep up the ambition, I want to become better and be able to call myself a developer some day.

May 17:
As I experienced before, the tutorials are often not clear regarding the software that is used, or even if people are working with OS X or Windows. I have had some frustrating hours with tutorials using all sorts of software to make life difficult (XAMPP for example) instead of going with Django 2 as is. Finally, I found a series (!!) that is made by CoreyMS (the website is coreyms.com) and this is really great. Thorough explanation, step by step, clear view of screens and code, plus all code provided so that you can check it if you have problems. This is really a course to follow: some 14 tutorials but I have already done 5 in two days. It is almost addictive because I am now starting to understand the framework, the relationships between parts such as templates and views and models. And .... we work with classes! Maybe I get to understand OOP better as well. I was rather demotivated on Wednesday after trying another two tutorials (one by an Indian lady, with pronounciation that was hard to understand). But this helps a lot and motivates me!

May 19:
So far, I have completed 6 of the Django tutorial series made by CoreyMS. I still am very content: good explanations, clear code, very professional and alert to details. This is a great teacher and I am learning a lot.
On May 18, I attended a Women Coding Day at LeWagon, on Ruby. It was surprisingly easy because the concepts are the same as in Python, which is a lot similar. It was nice to have the feeling 'Aha, that fits with what I know' and realize that I do know quite a bit by now. My reason for going to this workshop is that developers say it is good to know several languages. I have seen (a little bit of) C and Python and now Ruby and I can see similarities and differences. It is helpful, I think.

May 21:
I have completed 9 of the CoreyMS tutorials and are becoming addicted. I am definitely going to do more of the tutorials on this website (there is one on classes in Python for example). The tutorials on Django go into a lot of detail: not just an app for a webblog but also a users app that includes registration of users, login, profiles and updating profiles, plus an admin utility. I cannot remember all of this but I feel confident going through it because I do understand it, and that is already very stimulating. I will continue these tutorials and hopefully finalise these this week.

May 23:
Almost three months of studying code without having to work as well. I have become very relaxed with coding. Things are definitely progressing. Yesterday evening I attended a Bootstrap workshop at Epitech. I did not really realize I would end up among (male) students. When I came into the classroom, there was one woman sitting alone at a table, two men at another table and four or five young guys in the front where four tables had been joined together. Choices: sit with the woman out of solidarity? sit closer to the screen to make sure I can follow things? sit between the 'boys' to raise awareness that coders can be women (even older women)? It was almost unconsciously: I went to the front and sat between the guys. Surprise surprise, they were completely confused.
During the session, the guy next to me could not keep up and asked me for help. That felt very good. On the other side, the student turned out to be German, and started talking to me because he thought I was German. Nice.
It turned out I understood a lot of what was presented. That felt good, too. The take-aways were: a quick overview of the documentation: where to find certain things, a walk-through interesting features, and overall the impression that with ready-made Bootstrap code I can create a professional website more easily. I felt a bit like this would be cheating: not writing entire pages of CSS to get the effects or functionalities that Bootstrap offers you, just copy-paste. That's nonsense of course: I can only understand Bootstrap because I have written and tested all those pages of CSS.
I felt at ease to ask questions and these questions were good questions, which was also good. At the end, there was an informal talk with the presenter, one student was asking him about the 'best' programming language to choose. After a bit of back and forth, the presenter mentioned Python a number of times, also for data analysis etc. The German boy sighed and said he did not like Python. I immediately exclaimed: 'Not like Python?? What is wrong with Python?' Others laughed a bit. The German student said he liked statically-typed and compiled languages, and that 'with Python a variable can be anything'. I laughed and said: "So you'd rather work with C, where if you want to use the number 5 you first have to tell the programme that it is an integer, and if you want to use the word black you have to tell the programme it is a string?" Everyone was laughing, the German included and we joked a bit more. I must say it felt great and I had never expected this: the students were obviously doing the same IT training and knew each other, so I did not expect any interaction. Funny, but nice. It will help me to not always see my age as a problem. They did not seem to care.

May 30:
Twelve tutorials finished and I feel more secure with Django now. Still not able to build such a website all by myself but that does not matter: I feel as if I know how to get started. The Bootstrap workshop gave me a better idea of how to use that and I think it can help to build something without having to reinvent the wheel. Although it feels a bit like cheating, using ready-made elements by just copying the Bootstrap code.
Anyway, my plan is to build a website that gathers loads of info on organic shops etc. It should become the website I myself would have liked to have when I came to Barcelona. It was not obvious (especially here in Poblenou) where to find things but you discover shops little by little and there is a lot I would like to share. So my drive would be to encourage and help people to live more sustainable by providing information regarding shops: address, opening hours, type of products etc. Maybe do a special on a shop now and then (and ask money for that?? who knows). Then there is the option of making the site interactive, so that other people can upload info about their favourite organic/sustainable shops, maybe give reviews and ratings. Even making it into an app would be something I would consider but let's go step by step.
The tutorial I have to do now is on deploying the site online with Heroku. The platform has a free account with a limited functionality but that will do fine to start the project.

May 31:
The tutorial to deploy the web app with Heroku is on hold for now. Since the maker of the tutorial uses environment variables and I do not know about these, it will have to wait until I understand this better. I did create the Heroku account and went through the tutorial up to approx. 27.30 min. I have left it there: the webblog app is working when I run it locally so that is fine for now. The deployment can wait. I will continue with the RealPython Django tutorials.

June 5:
The last couple of days have been used to think about the people who would be interested in the website I want to build. What are they looking for and what are their priorities? I have created 7 personas (is that too many? too few?).
The following priorities for the focus of the website information came forward (with points calculated on a rating from 5 (important) to 1):
1 - Organic, local and sustainable/no packaging (38)
2 - Health and dietary products (37)
3 - Price level and special offers (14)
4 - Quality food and trends (11)
5 - Convenience (7)
This does not include the standard information any user will expect: details about the shop (address etc.), opening hours and so on. This could be elaborated (easily accessible, for example).

June 13:
Travelling and coding does not work well this time. I have tried to practice a bit by doing katas. To return to Django, I think I should again work on the official Django tutorial.

June 14:
I decided to go through some tutorials that do not require me to code along, because it is not really helpful to work on a small screen with code as well as a video tutoria at the same time. The RealPython tutorial on virtual environments was useful and has confirmed my understanding of the concept and I feel that I am able to work with venv's.
The second tutorial was on Pylint and how to use a linter when writing code. Very useful. I would like to find out how to get the pylint comments into the actual code. Some of the 'corrections' are about not having comments in the code, which is a bit strange because that is not a code error but more something to do with good practices. Comments are important and I know that. It is not easy to write good comments, though. You need to be clear on what your code should achieve, and that is not always simple.

June 16:
Without a project or course to work on, things get messy as far as keeping on track. It is good to look at things that have been on my list (like pylint) but at the same time I feel like there is no progress and that I am just 'doing stuff'. I think this also has to do with the fact that in my mind I was still more or less waiting for something to happen with the 'Summer of Code'. It is clear that nothing will come of that so I need to kick myself into a direction and get going.

I have decided to go for web development with Django. From what I have done so far, I get the feeling that I like working on webpages and also that I may be able to get ahead easier in frontend than backend development. I will continue learning Python as well. Today I have gone through a list of tutorials and courses that are free or almost free and there are quite a few that I think would be useful. This will be my Summer of Code.

June 21:
Another Udemy course: Django 2.2 & Python - 'the ultimate web development bootcamp'. The names of their courses are a bit over the top sometimes but it looks like something I can benefit from: the goal is to create three websites in this course so that sounds like I should pick up a bit of routine. It is 10 hours of video which is less than half of the previous Udemy course (Python Bootcamp). I will see if I can work on my sustainableBCN website in parallel with doing this course.

June 24:
Good choice, this Udemy course. I went through the first 3 units and found it very useful. First, a Python refresher. Most of it I knew, only the bit about classes was a problem - again. Classes keep eluding me: I can see the use if you need to have xxx items that are generally the same. But when and how to use them? Fortunately, there was someone to help me out and something very important he said was: think of classes as a type of database, with attributes as the elements that belong to an item in a row of the database. This helped me to get my head around it although it still is not an automatic thing for me, such as loop and if/else statements.
The next unit was focused on building the first website, providing a word count functionality for a text entered by the user and also a counter of how often the individual words appear in the text. Very simple but at the same time really effective. I have been struggling to understand how views, templates and models are working together. In this website, no models have been used. The relationship between views, URL patterns and templates became clear to me and that is very stimulating. The next unit is on building a website for a personal portfolio.

June 28:
I am at 53 out of 82 units of this course and am very happy with it. I posted a question a few days ago and got a response immediately, even though the course dates from October 2018: they still keep up the Q&A.
Compared to the Python 3 Bootcamp course this is more hands-on, which makes sense. It gives me the confidence that I am learning and understanding more. My fear is always that I forget things and when confronted with a challenge, will not be able to respond correctly. But the fact that this teacher has to look up things or tries out something and has to change it because it is not the correct way, really helps to understand that I do not have to know everything as long as I know where to find what information. I have not become stuck in the course so far: any error message I got has been about a problem I was able to solve myself or a mistake in the code by the teacher that often I had seen myself already. It builds confidence.

July 1:
In the last days I have been working with Postgres and Digital Ocean, and today I have been able to get the website Personal Portfolio online without any real problem. This is exciting!

July 3:
Yesterday and today have been spent on getting Gunicorn running by creating a systemd socket and services file. The Udemy tutorial works with Ubuntu 16.04 but I have Ubuntu 18.04. There are, of course, things that are different. That is probably where it goes wrong because although it seems the socket is created, there are a number of error messages and this is not good. What do I do? Go back to Ubuntu 16.04? I will have a look at installing version 16.04 and getting rid of 18.04. I have three pages written up about the processes that I tried again today, the variations etc., and the errors I got. But if I have no one to discuss this with, it will not be of any use. Maybe just forget about it and go down to a previous version of Ubuntu.

July 10:
The Gunicorn thing kept tripping me up. I discussed it with Emily during the Codebar evening last week and decided to 'destroy' the server on Digital Ocean (that's actually what is on the button!) and start all over again. It means that I am going through this web project for the second time. But it is OK, the repetition can only help me understand and remember more. I could skip this web project and continue the tutorials but that would be stupid: I want to get this done. So not much new is happening, I am repeating things. So far, so good.

July 11:
Yesterday evening I attended a workshop at Le Wagon. The workshop focused on getting a value proposition established and building a prototype. I was not sure what to expect and it was more than I could have hoped for. Not only was there a solid presentation on the cycle from idea to building, launching and finally learning. There was the strong message to 'Stop building an idea and start solving a problem'. Just having an idea is not good enough: you need to map out the why/who/what/how of a problem. It was pointed out how prototyping will keep the process going between the idea and the learning, because you can continue to make changes without having to create a full programme.
The second half of the evening dived into Figma and this could be very useful to me. If I go ahead with building a website/app, then this is a great tool to build a prototype and get it tested. It is really impressive. Not sure how much the 'free' level offers but it might even be worthwhile getting a paid version.
The Udemy tutorial is going well and I really feel I get insight into how things are connected in Django. I have finished the 5th section after starting the entire website project anew. Now we are getting to section 6 on the Virtual Private Server, where it went wrong last time.  The Digital Ocean part should not be a problem: that server is up and running. The Postgres and venv part should not be a problem either. But Gunicorn ... let's see.

July 12:
So far I have done the major part of the Udemy tutorial (59 out of 82 units). The website has been built in principle, but the hosting is now the real challenge. With a new DigitalOcean server, a newly installed Postgres database plus the new project setup I expected to be able to move forward and get things running.

July 22:
I have not written an update for 10 days, which is strange. It has been busy but no more than usual. I have completed 71 out of 82 units of the tutorial. The second website project was more demanding but it went OK when I restarted the project. I am understanding more and more how all the parts fit together: Django, PostgreSQL, DigOcean server. It is clear from the third project that I am working on now that I am understanding things better. With my notes, I was able to start the new project, create an app, update the settings, create the homepage, create a basic view etc. It felt good to be able to grasp things faster in this third project.
It is the last project in the tutorial and I expect to finish the course within a week or so. There are two more Udemy courses waiting for me ... plus tons of other tutorials and information, too much to handle!

July 26:
So I finished the entire course on Wednesday 24!! This is very good and I have the feeling that I am really getting better. To challenge myself, I have decided to get the third and last project online with the DO server myself. Of course I will make use of the tutorial and other info. I want this to work even though I have finished the course already.
After I am satisfied, I will continue with the Backend Web Development with Django 2 Udemy course .... !!

July 29:
Always good to get confronted with reality again. I am half satisfied: I got the site running on the domain that I bought (sustainablebarcelona.org). When I deleted the connection, I wanted to see if the site would still run on the server using the IP address. That also worked. I then wanted to check if the site would run locally, because it did run perfectly on localhost, showing all content, while on the server the content was gone and only the navbar (with functionality) was there.
So the site does not run locally anymore. No idea why, I tried to undo changes I made to the settings, such as allowing port 8000 but have not found it. Anyway, this was a task I set myself: get the project online under the domain name and that worked except for the fact that not the entire site is showing. I think I will continue with the next course to get more experience building and deploying websites, and maybe I will get insights into the mistakes I must have made here ... who knows.

August 2:
I got the site working locally as well. Still not entirely satisfied with how things went but I can ask for some help so maybe I will revisit this. In the meantime, I have started the course on Backend Web Development with Django 2. The contents has been chopped into small pieces, which is good. It gives me the feeling of going back to the basics, which is also good. The repetition of the steps to create a website is important and the major reason why I chose this course (apart from the ridiculously low price of 11 euros!). There are 8 projects to be built, from very basic to more complicated. I want to get a routine in Django and this kind of repetition helps.
Five months of working on my Python studies, and where am I now? I have done a lot of workshops and tutorials, I have had many interesting and stimulating conversations with people from Codebar, PyLadies, LeWagon, AllWomen etc. etc. It has become even clearer than it already was that I have a lot to learn, and at the same time I know I have already learned quite a bit. Almost as a coincidence I ended up working with Django and as it turns out, I like it a lot. For someone who had no idea what 'fullstack' or 'backend/frontend' meant, I have come a long way ;-).
What I find very stimulating, is the contact between women who want to learn how to code. The coaches are very important as well, of course. The women share things they come across, activities they think others might be interested in, opportunities that would help others, there is a lot of generosity. We feel for each other and want everyone to succeed.
I have been pointed to Outreachy by one of these amazing women, and I am going to apply. Deadline is August 20 and we will be away a few weeks in August so I need to get the application written up (it is a bit of an essay-style thing) and ask others to have a look at it. Outreachy offers online internships with absolutely amazing organisations such as Mozilla - just cannot imagine what it would be like to contribute as an intern to such an important open-source, open-internet-defending organisation.

August 9:
The first draft of my Outreachy application is ready and has been sent to some people for feedback. After a few days away with friends I have picked up on the Backend web development course. It is good to build up a routine, although I wonder when I will ever remember all of the steps involved in creating a page for a website. Anyway, keep up the hard work. I have finished almost 6 out of 8 projects, with 32 of 43 units completed. The units are small compared to the previous course and to be honest the quality of the teaching was better in the previous course. But for me right now it is all about repetition. And of course, I go for the discounted courses ...

August 13:
My friend David has gone through the Outreachy application text and helped me enormously with improving it.
I am also continuing the Backend Web Development course, some 80% done so I hope to finish it before we have to travel to the Netherlands (again). I have also done a short tutorial on decorators (Real Python) but the more advanced part is beyond me right now. I would need notes to be able to do this myself. But I get the idea of having a boilerplate to create decorators with wrappers etc.
No events this month, things will start again in September.

August 14:
Finished the Backend Web Development course yesterday evening, faster than I expected. The practice is good. I was able to improve some things that I did not like about the last project, by myself. I want to improve the websites that we built for the eight projects but first I will go through the HTML5 Handbook that I got yesterday. That is a lot but since my next course is on Bootstrap I want to know as much as I can about HTML first.

August 18:
Traveling always means I cannot work as I would like to. Three days of travel have taken a lot of my energy. In the days before the travel I worked on the HTML book. The good thing is that in the first 25 pages I found many things that I know already and that feels good. On the other hand, there are over 80 pages so I expect quite a bit more to do. Somehow HTML appeals to me: maybe because it is so ordered and clear, and there basically is just one way of doing things. I want to go through this book before I start the last course that I bought: Bootstrap 4. A solid refresher of HTML will help with diving deeper into Bootstrap, I think.

August 29:
After going through the entire book I have a good overview of the various terms used. I have also been introduced to the topic of accessibility in a way that motivates me to look at this in more detail. My goal is to do something useful with my coding, not so much to get a job and a good salary. Non-profit work has always appealed to me and I have worked for 3 non-profits in the past. I am interested in contributing to open source as well (although I am still looking at how to get into this ...). So maybe this would be a topic I could work on, since it also focuses on websites and I like working with HTML and CSS etc. Who knows.
The book was free and extremely useful. I am now going through the course HTML5 Foundation classes and have come to 30% of the course feeling it is utterly useless. It was free as well, so I should not complain. I will finish it but have little hope of getting much out of it.

August 30:
Not much useful information from the HTML5 Foundation Classes course. I finished it today and have started with a new course by the same teacher as the Django 2.2 and Python3 Web Development course. He is pretty good and he also replies to questions, which is great. I have learned a lot from the earlier course. This is more advanced so I hope I can keep up with it.
Studying by myself has the disadvantage that I am not sure what is useful and at what time: the sequence of courses, the content, the level.... I am guessing a bit here on what is best. As far as Django is concerned, I think I am progressing nicely so in line with that, Bootstrap and HTML and databases are important and I will focus on that for now.

September 2:
I started this 'Mastering Django - AJAX, Class Based Views and Forms' course on August 30 and are already at over 60% of the course. Not only that, but I enjoy it hugely. Yes, it is advanced but I understand what is happening, why specific code is needed to get a specific result, and I have been able to debug everything that caused problems running the website - so far.
Also, it becomes easier to ask questions in the Q&A section. I have asked some questions in the previous Django course by the same teacher, and that worked really well. So I have done this three times so far, each time getting responses within a few days, really helpful. One question I solved myself already the next day after posting, and I posted my solution in the original question. That was appreciated, and it is nice to be able to contribute. I have learned so much myself from platforms like Stackoverflow etc., and I know how useful it is to look into problems and their solutions. So am really content right now.
It is going faster than I expected so I think I will have to adjust my planning for the next courses. That is great: the faster, the better because I have so much lined up and waiting for me. Unless the internship becomes reality ... then I will drop everything, of course.

September 3:
I have worked hard and am at 75% of the course right now. The functionality of AJAX to get YouTube videos searched and added is quite complicated but I understand (most, not all of) it.
This confronts me with the challenge before me: I need to build a website and get it online. After the previous Django + Python Web Development course, I had the experience of building something, getting a PostgreSQL database working and deploying the site via a DigitalOcean server, using an IP address that I bought. I need to do that again. At the same time, I hesitate because it may cost so much time and I feel I need to learn so much more and do more courses .... But I think the website should come first. Something simple, but all the way to and including deployment.

September 8:
So yesterday I ended at 91% of the course. The deployment with Heroku is not going as it should. I have worked on various options since Friday afternoon and have stopped now, to do something else (a HTML tutorial). Either I get advice from the course teacher that will help me set things right, or I will have to try again by simply deleting my entire project, cloning it from GitHub and see what happens. Alternatively, I can find a different tutorial about how to get a website deployed with Heroku, and see if that includes something that solves the problem. Right now, I put it on hold. It is very frustrating because I started last week Friday late afternoon and could have done the entire course in maybe a week and a half. It is not a competition, of course, but it is an indication that I am understanding Django (and Python) better and picking things up quickly. Anyway, nothing to be done right now.

September 11:
The last few days I have struggled a bit more with Heroku. I went back to the Python Django Tutorial by Corey Schafer (14 videos) that I did earlier. I did not follow the part about Heroku in one of the tutorials before, and decided to do it now and link this to the project from the Udemy Mastering Django course. Some things worked, some did not. As always, the tips and advice and explanations available online were contradictory, sometimes useful, sometimes incomprehensible. So after moving forward a bit and then backward again, and forward again, etc. I decided to leave Heroku for now. I will revisit this when I have a better idea of how to work with Heroku. I need a good tutorial on this. So this means I have finished this Udemy course. It was very worthwhile, especially because it went so well and so fast. This confirms that I am learning something. That's good. On to the next one. I will continue with a tutorial on Git because I still do not feel as if I know enough to work with Git. After this, I will look at the 15 or so courses that I have lined up. Continuing with backend development is probably the most logical step.

September 12:
Today I have gone through five tutorials on Git and GitHub. Using the GUI of Atom to work with GitHub is sooo much faster than using git add -A, git commit -m "...." and git push. But I need to know how to work with the command line, because I may end up in a situation where I cannot work with GitHub or Atom, and then I would be stuck. So these tutorials were good to go through. The tutorials produced by Corey Schafer are really valuable and I will continue to support this financially. So what's next? I want to get some understanding of using variables for secret keys etc. so I will go through a tutorial on that tomorrow. And then on to the next course.

September 13:
Today I start the Real Python tutorial Get Started with Django Part 1. Not sure what sequence I should follow in my learning path, there is so much to do. But for now, I think the best thing probably is to focus on backend and get some sort of routine there, before moving on to something else.

September 20:
The RealPython tutorial was very good, very well structured and clear. Written by a woman. Is that significant? Maybe. Anyway, I learned a lot from it. I decided to try and get the project website deployed with Heroku and use PostgreSQL. That was a bit of a struggle but at the Codebar workshop I received some great help and the site is deployed now. Not all links work yet so I have to do some more work on that. It has boosted my confidence enough to start a project to create a first, simple website for Elevador (repo is called elevador_project). The coach who worked with me at the Codebar workshop said something very useful: the README can be used as an outline of what you will build and which technology you will be using. By putting this in the README for the elevador_project, I was forced to get my vague ideas into something more tangible. No rocket science but still.
It is difficult to believe that it has been 7 months of learning. Of course, I did a lot before that, since March 2018 when I joined Codebar BCN. But during that time, coding was left for my 'free time', and I ended up rushing all the time to find a few hours to code. Ever since I quit my freelancing in March this year, I have had so much more time to dive into things, and to do these courses that help me move forward. The satisfaction I get from writing code that executes the way I envisaged it - it is still something I enjoy immensely.

September 21:
The Elevador project has kicked off, although not quite what I expected. The steps that seem so obvious and almost routine when you follow a tutorial, become something that you are unsure about. But so far so good. I have been able to add a favicon to the tab of the website, that is always a nice touch.
It is tempting to go for the hard way: DigitalOcean, PostgreSQL etc. But for the placeholder website it is enough to keep it simple and deploy with Heroku - which already will be enough of a challenge (the word 'simple' is misleading!). At first I was eager to continue with another course, learn more, repeat things, see the connections etc. etc. But now I think that a small project like this is a good way to confront myself with finding my way after working through these courses.
There is also the very practical reason of needing some sort of internet presence - even a very basic website will do.

September 25:
The website project is well under way. The homepage is taking shape and the nav buttons to the four other pages function. I need to do so much more ... But it is an extremely useful learning process. I am confronted with all the sneaky details I have to think of myself now. I picked up a lot from the tutorials, of course, but it is not the same when you do it by yourself. So far, I am really content with what I have produced.
The big challenge will be to get it online ... as always.
Next week Tuesday is October 1. I have checked the projects on the Outreachy website a few times and there are at least 2 Python projects I would be interested in. Let's see.

September 28:
It is almost addictive, making a website. I keep tweaking and improving. All sorts of ideas pop up, never knew I can be so creative getting a website made. I am learning a lot, but also I check all the time how I did things on one page, to use that on the other page. I do not know things by heart, that is clear. Do you have to, as a developer? Or does everyone still 'live on Stackoverflow' etc.? I hope to get the pages finished this weekend and start the Heroku process on Monday ... that could be a deception, of course. But there is a Codebar evening on Thursday so I can get some help if necessary.
The one big problem I see is how to check if the site works OK on mobile ... I will have to get it online for that, probably.

September 30:
The website is finished in its first version, as far as I am concerned. Tomorrow I will start working to get it online. I will be attending a workshop on Relational Databases with SQL and Python tonight, really looking forward to that. I have not done a lot re. databases and want to know more. For the website the plan is to use PostgreSQL because I have used that before. I will see what is discussed tonight.

October 1:
The Relational Database workshop was a disappointment but I received some material so maybe that is useful.
The website is online!! I managed to get it deployed with Heroku this morning. There are one or two pictures that do not load, which is strange because the code is exactly the same as for the other pictures. So far, I have not been able to get the Heroku url linked to my elevador.es domain name but I will get some help on that. It looks very good, I am happy with it.

Oct 3:
A bit overwhelmed when I got the email on Oct 1, telling me I passed the first selection for an Outreachy internship. I had been looking at the list of projects, hoping to contribute to a Mozilla project. It became a bit stressful, looking at the projects. The requirements gave me the impression that I would be OK with a project: Python skill level 3, which means 'Applicants should have used this skill in class or personal projects', and this was not set as 'required' but as 'preferred'. In most of the documentation it is about 'everyone can contribute' and it is really inviting. Then when I look at the repo for the Mozilla project, it is a jungle that I have no idea how to get into. The language is strange to me, and I feel like an idiot. Here the disadvantage of remote is immediately clear: where do I go to get some sort of explanation? It is daunting. I wonder whether the phrase "used this skill in class" covers what is expected here.
Anyway, I decided to drop the idea of contributing to a Mozilla project (for now, at least). I have selected a project of Oppia, a non-profit that aims to make education online freely available as widely as possible. I like their mission. The project is about finding a way to synchronously highlight the section in subtitles of the English that is spoken in the lesson. Students would see the translation of what is said at that specific moment, in highlighted text in their own language. The environment they have created for their volunteers feels welcoming and there is a load of information available. Let's see. I should not be too ambitious - I feel a bit inadequate right now, the good old imposter syndrome smiling at me.

October 11:
It has been a strange week since getting the message about the first selection round. I have sent an emal immediately on the day I got the message to both Mozilla and Oppia mentors (listed in the project list). No response. I decided to start the Oppia setup process: forking their repo, getting the development server working, downloading whatever was needed for that, etc. After some hickups I got the server online, which is great. It was a bit daunting, seeing the files in the repo but it worked.
After that, I looked at the repo's issues overview. It is a big list and the language for me was almost foreign - mostly, I did not understand what it was about. I felt stressed because I absolutely wanted to get going. In the end, I was fortunate enough to get some help: Emily from ThoughtWorks sat down with me for an hour to explain how the process of working on issues, committing and merging etc. works. It is all new, since I never worked with a team before on GitHub. I still feel insecure about it but hopefully it will become routine.
The issue I will tackle is not really about coding: it is applying of the new naming convention on a directory. I can see that there are loads of folders in the directory, all containing many files. It is obvious that other contributors went for the smaller directories, and had the 'quick win' with that. Anyway, I don't really care about that. I just want to get going. Immediately, the first folder in the directory posed a problem because the file names are not in line with what has been explained in the description: none of the functionalities that are listed are used for these file names (and many others that I can see just browsing the folders). I have raised a question about that. In the meantime, I will start changing what I think I can change, just to start contributing because too many days have gone by. The people from Oppia have been friendly and they have responded pretty quick so that is very encouraging.

October 15:
In the meantime I have made my first pull request. Of course, there are errors etc., that was to be expected. Also, I was not entirely clear on the issue: I had understood it as implementing the new naming convention for the file names, but it turns out that in many files this change has to be made in the code, too. It is logical, but because I think I am not competent enough to work on the code, it never crossed my mind to look at it. The insecurity regarding my capabilties also makes me ask many questions, perhaps too many, because I am afraid of making mistakes. This is probably what all beginners experience, but I do not want to take up time from people who are using their own free time to work on this open source project.
Anyway, I have (again) posted questions regarding how to proceed and will wait for the replies. This is actually the most 'vague' part of such a project: you never know when you will receive feedback so you do not know when you can continue with your work. In general, that probably is fine for volunteers, but in my case it is important to make contributions and I have three more weeks to do so. I would really love to be able to do something useful for the project, not bug people with questions. 
Yesterday, I had an hour with Salva from ThoughtWorks and he explained in detail how to work with GitHub when you work on a project with a team. Much of it was completely new to me, even though I have done all the GitHub Learning Labs and have read a lot about GitHub and watched video tutorials, etc. Somehow the level beyond change/add/commit/push is not clearly explained. Right now, I am working locally on a branch that I added to the fork that I cloned from the Oppia project. So there is a remote version of this branch involved, on the fork. Then from the fork I can make a PR to the 'upstream' (never heard of that before). Some doubt has entered my mind regarding all these tutorials I am doing - but how else can I learn, I cannot just apply for a job and learn? I will continue for as long as it takes. Anyway, Mónica has been enormously supportive and found me a coach at ThoughtWorks with whom I will be working every week for one hour until mid-November. That will boost my learning, no doubt about it.

